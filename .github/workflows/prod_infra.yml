name: PROD Infra

on:
  push:
    branches:
      - "main"

concurrency:
  group: prod-infra-${{ github.ref }}
  cancel-in-progress: true

env:
  AWS_REGION: ap-northeast-2
  BUCKET: ${{secrets.PROD_TERRAFORM_STATE_BUCKET}}
  DYNAMODB_TABLE: ${{secrets.PROD_DYNAMODB_TABLE}}

jobs:
  backend_config:
    name: Backend Configuration
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Install Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: latest

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Terraform Init (Backend)
        working-directory: prod_common/backend
        run: terraform init

      - name: Terraform Import S3 Bucket
        working-directory: prod_common/backend
        run: terraform import aws_s3_bucket.terraform_state "${{ env.BUCKET }}" || echo "Bucket import failed."

      - name: Terraform Import DynamoDB Table
        working-directory: prod_common/backend
        run: terraform import aws_dynamodb_table.terraform_state_lock "${{ env.DYNAMODB_TABLE }}" || echo "DynamoDB table import failed."

      - name: Terraform Plan (Backend)
        working-directory: prod_common/backend
        id: backend_plan
        run: |
          terraform plan -detailed-exitcode || exit_code=$? && echo "::set-output name=exitcode::$exit_code"

      - name: Terraform Apply (Backend)
        working-directory: prod_common/backend
        if: steps.backend_plan.outputs.exitcode == '2'
        run: terraform apply -auto-approve

  prod_infra:
    name: Deploy PROD Infrastructure
    if: ${{ github.event_name != 'workflow_dispatch' }}
    runs-on: ubuntu-latest
    needs: backend_config
    steps:
      - name: Checkout Dev repository
        uses: actions/checkout@v2

      - name: Install Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: latest

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Terraform Init (PROD)
        working-directory: docker/prod
        run: terraform init

      - name: Terraform Plan (PROD)
        working-directory: docker/prod
        id: prod_plan
        run: |
          terraform plan \
          -var="db_password=${{secrets.PROD_DB_PASSWORD}}" \
          -detailed-exitcode || exit_code=$? && echo "::set-output name=exitcode::$exit_code"

      - name: Terraform Apply (PROD)
        working-directory: docker/prod
        if: steps.dev_plan.outputs.exitcode == '2'
        run: |
          terraform apply -auto-approve \
          -var="db_password=${{ secrets.PROD_DB_PASSWORD }}"
