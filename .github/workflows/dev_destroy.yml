name: Terraform Destroy (Dev)

on:
  workflow_dispatch:

  schedule:
    - cron: '40 11 * * 1-5'
jobs:
  destroy:
    runs-on: ubuntu-latest

    env:
      TERRAFORM_DIR: transition/terraform/dev
      SCRIPT_DIR: transition/deploy/scripts

    steps:
      - name: Checkout develop branch
        uses: actions/checkout@v3
        with:
          ref: develop

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.6.6

      - name: Decrypt terraform.tfvars.enc
        working-directory: ${{ env.TERRAFORM_DIR }}
        run: |
          openssl aes-256-cbc -d -salt -pbkdf2 -in terraform.tfvars.enc -out terraform.tfvars -k "${{ secrets.DEV_TFVARS_ENC_PW }}"

      - name: Decrypt env file
        working-directory: ${{ env.SCRIPT_DIR }}
        run: |
          openssl enc -aes-256-cbc -d -pbkdf2 -in cicd-variables.sh.enc -out cicd-variables.sh -k "${{ secrets.DEV_CICD_VARIABLES_ENC_PW }}"
          chmod +x cicd-variables.sh
          source ./cicd-variables.sh

          echo "::add-mask::$AWS_ACCESS_KEY_ID"
          echo "::add-mask::$AWS_SECRET_ACCESS_KEY"
          echo "::add-mask::$AWS_DEFAULT_REGION"
          echo "::add-mask::$SSH_KEY"
          echo "::add-mask::$SSH_KEY_BASE64"
          echo "::add-mask::$AWS_SERVER_IP"
          echo "::add-mask::$DB_PASSWORD"
          echo "::add-mask::$S3_BUCKET_INFRA"

          echo "AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID" >> $GITHUB_ENV
          echo "AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY" >> $GITHUB_ENV
          echo "AWS_DEFAULT_REGION=$AWS_DEFAULT_REGION" >> $GITHUB_ENV
          echo "SSH_KEY=$SSH_KEY" >> $GITHUB_ENV
          echo "SSH_KEY_BASE64=$SSH_KEY_BASE64" >> $GITHUB_ENV
          echo "AWS_SERVER_IP=$AWS_SERVER_IP" >> $GITHUB_ENV
          echo "DB_PASSWORD=$DB_PASSWORD" >> $GITHUB_ENV
          echo "S3_BUCKET_INFRA=$S3_BUCKET_INFRA" >> $GITHUB_ENV
                    
      - name: Restore SSH Key
        run: |
          mkdir -p ~/.ssh
          echo "${SSH_KEY_BASE64}" | base64 --decode > "${SSH_KEY}"
          chmod 600 "${SSH_KEY}"

      - name: Run DB Backup Script
        working-directory: ${{ env.SCRIPT_DIR }}
        run: bash db-backup.sh

      - name: Terraform Init
        working-directory: ${{ env.TERRAFORM_DIR }}
        run: terraform init

      - name: Terraform Destroy
        working-directory: ${{ env.TERRAFORM_DIR }}
        run: terraform destroy -auto-approve -var-file=terraform.tfvars

      - name: Clean up
        if: always()
        run: |
          rm -f ${{ env.TERRAFORM_DIR }}/terraform.tfvars
          rm -f ${{ env.SCRIPT_DIR }}/cicd-variables.sh
      
      - name: Notify Discord on Success
        if: success()
        run: |
          jq -n \
            '{
              "embeds": [
                {
                  "title": "🛑 DEV 서버 중지됨",
                  "description": "커리어비 DEV 서버가 중지되었습니다.\n\n내일 오전 9시에 다시 만나요! 👋🏻👋🏻",
                  "color": 9807270,
                  "footer": { "text": "Cloud Functions - DEV Server" },
                  "timestamp": "'$(date -u +%Y-%m-%dT%H:%M:%SZ)'"
                }
              ]
            }' > payload.json

          curl -H "Content-Type: application/json" \
              -X POST \
              -d @payload.json \
              ${{ secrets.SERVER_DISCORD_WEBHOOK_URL }}

      - name: Notify Discord on Failure
        if: failure()
        run: |
          jq -n \
            '{
              "embeds": [
                {
                  "title": "❌ DEV 서버 중지 실패",
                  "description": "서버 종료 작업 중 오류가 발생했습니다.\n\nGitHub Actions 로그를 확인해 주세요. 🚨",
                  "color": 15548997,
                  "footer": { "text": "Cloud Functions - DEV Server" },
                  "timestamp": "'$(date -u +%Y-%m-%dT%H:%M:%SZ)'"
                }
              ]
            }' > payload.json

          curl -H "Content-Type: application/json" \
              -X POST \
              -d @payload.json \
              ${{ secrets.DISCORD_WEBHOOK_URL }}