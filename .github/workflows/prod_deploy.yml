name: PROD Deploy to GCE with GCS Artifacts

on:
  push:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest
  
    env:
      COMMIT_HASH: ${{ github.sha }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: google auth
        id: "auth"
        uses: "google-github-actions/auth@v1"
        with:
          credentials_json: "${{ secrets.GCP_SA_KEY }}"

      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v2
        with:
          version: 'latest'
          project_id: ${{ secrets.GCP_PROJECT_ID }}
      
      - name: Set timestamp-based path
        run: |
            TIMESTAMP=$(TZ='Asia/Seoul' date +%Y-%m-%d_%H_%M_%S)
            echo "DEPLOY_PATH=${TIMESTAMP}_${COMMIT_HASH}" >> $GITHUB_ENV

      - name: Upload to GCS
        run: |
            echo "Uploading to: ${{ secrets.GCS_PROD_BUCKET_PATH }}/test/$DEPLOY_PATH"
            gcloud storage cp -r ./test/*  "${{ secrets.GCS_PROD_BUCKET_PATH }}/test/$DEPLOY_PATH/"

      - name: Setup SSH key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.GCE_SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.GCE_HOST }} >> ~/.ssh/known_hosts

      - name: Trigger remote deploy script on GCE
        run: |
          ssh ${{ secrets.GCE_USER }}@${{ secrets.GCE_HOST }} "bash ~/release/deploy-test.sh"

      - name: Notify Discord on Success
        if: success()
        run: |
            COMMIT_MSG=$(echo '${{ github.event.head_commit.message }}' | jq -Rsa .)
            DESCRIPTION="**Repository:** \`${{ github.repository }}\`\n**Branch:** \`${{ github.ref_name }}\`\n**Commit:** $COMMIT_MSG\n\n[üîó Ïã§Ìñâ Î°úÍ∑∏ Î≥¥Í∏∞](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})"
        
            PAYLOAD=$(jq -n --arg desc "$DESCRIPTION" --arg time "${{ github.event.head_commit.timestamp }}" '{
              "embeds": [
                {
                  "title": "‚úÖ ÌîÑÎ°úÎçïÏÖò ÌôòÍ≤ΩÏóê Î∞∞Ìè¨ ÏÑ±Í≥µ",
                  "description": $desc,
                  "color": 65280,
                  "footer": {
                    "text": "GitHub Actions - PROD Deploy"
                  },
                  "timestamp": $time
                }
              ]
            }')
        
            curl -H "Content-Type: application/json" \
                 -X POST \
                 -d "$PAYLOAD" \
                 ${{ secrets.DISCORD_WEBHOOK_URL }}

      - name: Notify Discord on Failure
        if: failure()
        run: |
          COMMIT_MSG=$(echo '${{ github.event.head_commit.message }}' | jq -Rsa .)
          DESCRIPTION="**Repository:** \`${{ github.repository }}\`\n**Branch:** \`${{ github.ref_name }}\`\n**Commit:** $COMMIT_MSG\n\n[üîó Ïã§Ìñâ Î°úÍ∑∏ Î≥¥Í∏∞](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})"
        
          PAYLOAD=$(jq -n --arg desc "$DESCRIPTION" --arg time "${{ github.event.head_commit.timestamp }}" '{
              "embeds": [
                {
                  "title": "‚ùå ÌîÑÎ°úÎçïÏÖò ÌôòÍ≤ΩÏóê Î∞∞Ìè¨ Ïã§Ìå®",
                  "description": $desc,
                  "color": 16711680,
                  "footer": {
                    "text": "GitHub Actions - PROD Deploy"
                  },
                  "timestamp": $time
                }
              ]
            }')
                    
            curl -H "Content-Type: application/json" \
                 -X POST \
                 -d "$PAYLOAD" \
                 ${{ secrets.DISCORD_WEBHOOK_URL }}