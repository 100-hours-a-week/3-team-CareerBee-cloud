name: PROD Deploy to GCE with GCS Artifacts

on:
  push:
    branches: [main]

env:
  TF_VAR_db_root_password: ${{ secrets.DB_ROOT_PASSWORD }}

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read

    steps:
      - name: Configure AWS Credentials via OIDC
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/GitHubActionsOIDCRole
          aws-region: ap-northeast-2

      - name: Notify Discord on Success
        if: success()
        run: |
          COMMIT_MSG="${{ github.event.head_commit.message }}"
          REPO="${{ github.repository }}"
          BRANCH="${{ github.ref_name }}"
          RUN_URL="https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"
          TIMESTAMP="${{ github.event.head_commit.timestamp }}"

          DESCRIPTION="**Repository:** \`${REPO}\`
          **Branch:** \`${BRANCH}\`
          **Commit:** \`${COMMIT_MSG}\`
          [🔗 실행 로그 보기](${RUN_URL})"

          jq -n \
            --arg desc "$DESCRIPTION" \
            --arg timestamp "$TIMESTAMP" \
            '{
              "embeds": [
                {
                  "title": "✅ 프로덕션 환경에 배포 성공",
                  "description": $desc,
                  "color": 65280,
                  "footer": { "text": "GitHub Actions - PROD Deploy" },
                  "timestamp": $timestamp
                }
              ]
            }' > payload.json

          curl -H "Content-Type: application/json" \
                -X POST \
                -d @payload.json \
                ${{ secrets.DISCORD_WEBHOOK_URL }}

      - name: Notify Discord on Failure
        if: failure()
        run: |
          COMMIT_MSG="${{ github.event.head_commit.message }}"
          REPO="${{ github.repository }}"
          BRANCH="${{ github.ref_name }}"
          RUN_URL="https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"
          TIMESTAMP="${{ github.event.head_commit.timestamp }}"

          DESCRIPTION="**Repository:** \`${REPO}\`
          **Branch:** \`${BRANCH}\`
          **Commit:** \`${COMMIT_MSG}\`
          [🔗 실행 로그 보기](${RUN_URL})"

          jq -n \
            --arg desc "$DESCRIPTION" \
            --arg timestamp "$TIMESTAMP" \
            '{
              "embeds": [
                {
                  "title": "❌ 프로덕션 환경에 배포 실패",
                  "description": $desc,
                  "color": 16711680,
                  "footer": { "text": "GitHub Actions - PROD Deploy" },
                  "timestamp": $timestamp
                }
              ]
            }' > payload.json

          curl -H "Content-Type: application/json" \
                -X POST \
                -d @payload.json \
                ${{ secrets.DISCORD_WEBHOOK_URL }}
