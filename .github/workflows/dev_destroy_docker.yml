name: Terraform Destroy - Docker (Dev)

on:
  workflow_dispatch:
  
jobs:
  destroy:
    runs-on: ubuntu-latest

    env:
      TERRAFORM_DIR: docker/dev

    steps:
      - name: Checkout develop branch
        uses: actions/checkout@v3
        with:
          ref: develop

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.6.6
      
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.DEV_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.DEV_AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2

      - name: Download terraform.tfvars from S3
        working-directory: ${{ env.TERRAFORM_DIR }}
        run: |
          aws s3 cp s3://${{ secrets.DEV_S3_INFRA_NAME }}/terraform.tfvars.enc terraform.tfvars.enc
          openssl aes-256-cbc -d -salt -pbkdf2 -in terraform.tfvars.enc -out terraform.tfvars -k "${{ secrets.DEV_TFVARS_ENC_PW }}"
      
      - name: Load selected env variables into GitHub Environment
        working-directory: ${{ env.TERRAFORM_DIR }}
        run: |
          source ./terraform.tfvars

          echo "::add-mask::$WEBHOOK_TOKEN"
          echo "WEBHOOK_TOKEN=$WEBHOOK_TOKEN" >> $GITHUB_ENV
          
      - name: DB backup
        run: |
          set -e
          if [[ "$(curl --max-time 5 -s -o /dev/null -w "%{http_code}" https://webhook.dev.careerbee.co.kr/health-check)" == "200" ]]; then
            curl https://webhook.dev.careerbee.co.kr/db_backup \
              -H "Authorization: Bearer ${{ env.WEBHOOK_TOKEN }}"
          else
            exit 1
          fi

      - name: Terraform Init
        working-directory: ${{ env.TERRAFORM_DIR }}
        run: terraform init

      - name: Terraform Destroy
        working-directory: ${{ env.TERRAFORM_DIR }}
        run: terraform destroy -auto-approve -var-file=terraform.tfvars
      
      - name: Notify Discord on Success
        if: success()
        run: |
          jq -n \
            '{
              "embeds": [
                {
                  "title": "🛑 DEV 서버 중지됨",
                  "description": "커리어비 DEV 서버가 중지되었습니다.\n\n내일 오후 1시에 다시 만나요! 👋🏻👋🏻",
                  "color": 9807270,
                  "footer": { "text": "Cloud Functions - DEV Server" },
                  "timestamp": "'$(date -u +%Y-%m-%dT%H:%M:%SZ)'"
                }
              ]
            }' > payload.json

          curl -H "Content-Type: application/json" \
              -X POST \
              -d @payload.json \
              ${{ secrets.SERVER_DISCORD_WEBHOOK_URL }}

      - name: Notify Discord on Failure
        if: failure()
        run: |
          jq -n \
            '{
              "embeds": [
                {
                  "title": "❌ DEV 서버 중지 실패",
                  "description": "서버 종료 작업 중 오류가 발생했습니다.\n\nGitHub Actions 로그를 확인해 주세요. 🚨",
                  "color": 15548997,
                  "footer": { "text": "Cloud Functions - DEV Server" },
                  "timestamp": "'$(date -u +%Y-%m-%dT%H:%M:%SZ)'"
                }
              ]
            }' > payload.json

          curl -H "Content-Type: application/json" \
              -X POST \
              -d @payload.json \
              ${{ secrets.DISCORD_WEBHOOK_URL }}